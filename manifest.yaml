id: btc-rpc-proxy
title: Bitcoin Proxy
version: 0.3.2.1
release-notes: "Upgrade to EmbassyOS v0.3.0"
license: mit
wrapper-repo: "https://github.com/Start9Labs/btc-rpc-proxy-wrapper"
upstream-repo: "https://github.com/Kixunil/btc-rpc-proxy"
support-site: "https://github.com/Kixunil/btc-rpc-proxy/issues"
marketing-site: "https://github.com/Kixunil/btc-rpc-proxy"
build: ["make"]
min-os-version: "0.3.0"
description:
  short: Super charge your Bitcoin node
  long: |
   Bitcoin Proxy enables you to specify several users and, for each user, the list of RPC calls they are allowed to make against your Bitcoin node. It also acts as a super charger for your pruned node. If a user or application requires a block not retained by your node, Bitcoin Proxy will dynamically fetch the block over the P2P network, then verify its hash to ensure validity. Your pruned node will now act like a full archival node!
assets:
  license: LICENSE
  icon: icon.png
  instructions: instructions.md
  docker-images: image.tar
  icon-type: png
main:
  type: docker
  image: main
  entrypoint: "docker_entrypoint.sh"
  args: []
  mounts: {}
  io-format: yaml
health-checks: {}
config:
  get:
    type: docker
    image: compat
    entrypoint: config
    args: 
      - "get"
      - "/root"
    mounts: {}
    io-format: yaml
  set:
    type: docker
    image: compat
    entrypoint: config
    args:
      - "set"
      - "/root"
    mounts: {}
    io-format: yaml
dependencies:
  bitcoind:
    version: "^0.21.1.2"
    recommended: true
    critical: true
    optional: Can alternatively configure an external bitcoin node.
    description: Bitcoin Proxy sends RPC requests to a bitcoin node, like the Bitcoin Core service.
    config:
      check: 
        type: docker
        image: compat
        system: true
        entrypoint: "true"
      auto-configure:
        type: docker
        image: compat
        system: true
        entrypoint: "true"
        implementation:
          - rule: "rpc.enable?"
            description: "Must have an RPC enabled"
            suggestions:
              - SET:
                  var: "rpc.enable"
                  to-value: true
volumes:
  bitcoind:
    type: pointer
    package-id: bitcoind
    volume-id: main
    path: "/"
    readonly: true
alerts:
  install: |
    After installing, you will need to manually enable the new RPC requests if you intend to use them. We strongly recommend enabling ALL requests for your primary user.
interfaces:
  main:
    name: Main
    description: Main image interface configurations
    tor-config:
      port-mapping:
        8332: "8332"
    lan-config:
      8332:
        ssl: false
        mapping: 8332
    ui: false
    protocols:
      - tcp
      - http
backup:
  create:
    type: docker
    image: compat
    system: true
    entrypoint: "true"
    args: []
    mounts: {}
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: "true"
    args: []
    mounts: {}