id: btc-rpc-proxy
title: Bitcoin Proxy
version: 0.3.2.1
release-notes: "Upgrade to EmbassyOS v0.3.0"
license: mit
wrapper-repo: "https://github.com/Start9Labs/btc-rpc-proxy-wrapper"
upstream-repo: "https://github.com/Kixunil/btc-rpc-proxy"
support-site: "https://github.com/Kixunil/btc-rpc-proxy/issues"
build: ["make"]
min-os-version: "0.3.0"
description:
  short: Super charge your Bitcoin node
  long: |
   Bitcoin Proxy enables you to specify several users and, for each user, the list of RPC calls they are allowed to make against your Bitcoin node. It also acts as a super charger for your pruned node. If a user or application requires a block not retained by your node, Bitcoin Proxy will dynamically fetch the block over the P2P network, then verify its hash to ensure validity. Your pruned node will now act like a full archival node!
assets:
  license: LICENSE
  icon: icon.png
  instructions: instructions.md
  docker-images: image.tar
  icon-type: png
main:
  type: docker
  image: main
  entrypoint: "docker_entrypoint.sh"
  args: []
  mounts:
    main: /root
    bitcoind: /mnt/bitcoind
  io-format: yaml
health-checks:
  main: 
    type: docker
    image: main
    system: false
    entrypoint: sh
    args: ["-c", "curl http://localhost:8332 || exit 1"]
    mounts:
      main: /root
    io-format: yaml
    critical: true
config:
  get:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args: 
      - config
      - get
      - /root
      - "/mnt/assets/config_spec.yaml"
    mounts:
      compat: /mnt/assets
      main: /root
    io-format: yaml
  set:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - config
      - set
      - "btc-rpc-proxy"
      - /root
      - "/mnt/assets/config_rules.yaml"
    mounts:
      compat: /mnt/assets
      main: /root
    io-format: yaml
properties:
  type: docker
  image: compat
  system: true
  entrypoint: compat
  args:
    - properties
    - /root
  mounts:
    main: /root
    compat: /mnt/assets
  io-format: yaml
dependencies:
  bitcoind:
    version: "^0.21.1.2"
    requirement:
      type: "opt-out"
      how: Can alternatively configure an external bitcoin node.
    critical: false
    description: Bitcoin Proxy sends RPC requests to a bitcoin node, like the Bitcoin Core service.
    config:
      check: 
        type: docker
        image: compat
        system: true
        entrypoint: compat
        args:
          - dependency
          - check
          - "btc-rpc-proxy"
          - /root
          - "/mnt/assets/bitcoind_config_rules.yaml"
        mounts:
          compat: /mnt/assets
          main: /root
      auto-configure:
        type: docker
        image: compat
        system: true
        entrypoint: compat
        args:
          - dependency
          - "auto-configure"
          - "btc-rpc-proxy"
          - bitcoind
          - /root
          - "/mnt/assets/bitcoind_config_rules.yaml"
volumes:
  main:
    type: data
  compat:
    type: assets
  bitcoind:
    type: pointer
    package-id: bitcoind
    volume-id: main
    path: /root/.bitcoin
    readonly: true
alerts:
  install: |
    After installing, you will need to manually enable the new RPC requests if you intend to use them. We strongly recommend enabling ALL requests for your primary user.
interfaces:
  main:
    name: Network interface
    description: Specifies the interface to listen on for HTTP connections.
    tor-config:
      port-mapping:
        8332: "8332"
    lan-config:
      8332:
        ssl: false
        mapping: 8332
    ui: false
    protocols:
      - tcp
      - http
backup:
  create:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - create
      - "btc-rpc-proxy"
      - /mnt/backup
      - /root
    mounts:
      BACKUP: /mnt/backup
      main: /root
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - restore
      - "btc-rpc-proxy"
      - /mnt/backup
      - /root
    mounts:
      BACKUP: /mnt/backup
      main: /root